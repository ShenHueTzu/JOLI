{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shen/JOLI/containers/cardList/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { deleteForm } from '../../apis/forms';\nimport { fetchFormList } from '../../redux/slices/formsSlice';\nimport { fetchResponseList } from '../../redux/slices/responseSlice';\nimport CreateCard from '../../components/formCard/create';\nimport Card from '../../components/formCard/normal';\nimport Popup from '../popup';\nimport Delete from '../popup/delete';\nimport ShareLink from '../popup/shareLink';\nimport { Wrapper } from './styled';\n\nvar cardList = function cardList(_ref) {\n  _s();\n\n  var tabName = _ref.tabName;\n  var router = useRouter();\n  var dispatch = useDispatch();\n  var formList = useSelector(function (state) {\n    return state.form.list;\n  });\n  var respList = useSelector(function (state) {\n    return state.response.list;\n  });\n  useEffect(function () {\n    if (tabName === 'my-form') {\n      dispatch(fetchFormList());\n    }\n\n    if (tabName === 'filled-form') {\n      dispatch(fetchResponseList());\n    }\n  }, [tabName]);\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var _useState2 = useState(null),\n      type = _useState2[0],\n      setType = _useState2[1];\n\n  var _useState3 = useState(null),\n      activeId = _useState3[0],\n      setId = _useState3[1];\n\n  var _useState4 = useState(''),\n      link = _useState4[0],\n      setLink = _useState4[1];\n\n  var handleClose = function handleClose() {\n    return setIsOpen(false);\n  };\n\n  var handleAdd = function handleAdd() {\n    router.push('/create-setting');\n  };\n\n  var _handleClick = function handleClick(id) {\n    if (id === activeId) {\n      setId(null);\n    } else {\n      setId(id);\n    }\n  };\n\n  var handleEdit = function handleEdit() {\n    console.log('edit');\n  };\n\n  var handlePreview = function handlePreview() {\n    console.log('preview');\n  };\n\n  var handleShare = function handleShare() {\n    if (tabName === 'my-form') {\n      var uuid = formList[activeId].uuid;\n      setLink(\"https://cryptic-crag-39318.herokuapp.com/jolly/forms/\".concat(uuid));\n    }\n\n    if (tabName === 'filled-form') {\n      var formUuid = respList[activeId].formUuid;\n      setLink(\"/jolly/forms/\".concat(formUuid));\n    }\n\n    setType('share');\n    setIsOpen(true);\n  };\n\n  var handleReview = function handleReview() {\n    var uuid = formList[activeId].uuid;\n    router.push(\"/jolly/response/\".concat(uuid));\n  };\n\n  var handleDelete = function handleDelete() {\n    setType('delete');\n    setIsOpen(true);\n  };\n\n  var onDelete = function onDelete() {\n    var uuid = list[activeId].uuid;\n    deleteForm({\n      uuid: uuid\n    });\n    setIsOpen(false);\n  };\n\n  var handleCopy = function handleCopy() {\n    var ele = document.getElementById('copy_link');\n    ele.select();\n    ele.setSelectionRange(0, 99999);\n    document.execCommand('copy');\n  };\n\n  var options = [{\n    text: 'Edit',\n    onClickEvent: function onClickEvent() {\n      return handleEdit();\n    }\n  }, {\n    text: 'Preview',\n    onClickEvent: function onClickEvent() {\n      return handlePreview();\n    }\n  }, {\n    text: 'Share',\n    onClickEvent: function onClickEvent() {\n      return handleShare();\n    }\n  }, {\n    text: 'Responses',\n    onClickEvent: function onClickEvent() {\n      return handleReview();\n    }\n  }, {\n    text: 'Delete',\n    onClickEvent: function onClickEvent() {\n      return handleDelete();\n    }\n  }];\n  var list = tabName === 'my-form' ? formList : respList;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(CreateCard, {\n      handleAdd: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, _this), tabName === 'my-form' && list && list.length > 0 && list.map(function (card, idx) {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        id: idx,\n        activeId: activeId,\n        title: card.name,\n        times: card.updatedAt,\n        response: card.Responses.length,\n        options: options,\n        handleClick: function handleClick() {\n          return _handleClick(idx);\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, _this);\n    }), tabName === 'filled-form' && list && list.length > 0 && list.map(function (card, idx) {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        id: idx,\n        activeId: activeId,\n        title: card.formName,\n        times: card.formExpiresAt,\n        sponser: card.sponsorName,\n        options: options,\n        handleClick: function handleClick() {\n          return _handleClick(idx);\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(Popup, {\n      isOpen: isOpen,\n      onClose: function onClose() {\n        return handleClose();\n      },\n      children: [type === 'delete' && /*#__PURE__*/_jsxDEV(Delete, {\n        formName: list[activeId].name,\n        onDelete: onDelete,\n        handleClose: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 31\n      }, _this), type === 'share' && /*#__PURE__*/_jsxDEV(ShareLink, {\n        value: link,\n        handleCopy: handleCopy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 30\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(cardList, \"P1cu181WgHuwIPeSwojI7/r7llg=\", false, function () {\n  return [useRouter, useDispatch, useSelector, useSelector];\n});\n\nexport default cardList;","map":{"version":3,"sources":["/Users/shen/JOLI/containers/cardList/index.js"],"names":["React","useEffect","useState","useSelector","useDispatch","useRouter","deleteForm","fetchFormList","fetchResponseList","CreateCard","Card","Popup","Delete","ShareLink","Wrapper","cardList","tabName","router","dispatch","formList","state","form","list","respList","response","isOpen","setIsOpen","type","setType","activeId","setId","link","setLink","handleClose","handleAdd","push","handleClick","id","handleEdit","console","log","handlePreview","handleShare","uuid","formUuid","handleReview","handleDelete","onDelete","handleCopy","ele","document","getElementById","select","setSelectionRange","execCommand","options","text","onClickEvent","length","map","card","idx","name","updatedAt","Responses","formName","formExpiresAt","sponsorName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouter } from 'next/router';\n\nimport { deleteForm } from '../../apis/forms';\nimport { fetchFormList } from '../../redux/slices/formsSlice';\nimport { fetchResponseList } from '../../redux/slices/responseSlice';\nimport CreateCard from '../../components/formCard/create';\nimport Card from '../../components/formCard/normal';\nimport Popup from '../popup';\nimport Delete from '../popup/delete';\nimport ShareLink from '../popup/shareLink';\n\nimport { Wrapper } from './styled';\n\nconst cardList = ({ tabName }) => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const formList = useSelector((state) => state.form.list);\n  const respList = useSelector((state) => state.response.list);\n\n  useEffect(() => {\n    if (tabName === 'my-form') {\n      dispatch(fetchFormList());\n    }\n    if (tabName === 'filled-form') {\n      dispatch(fetchResponseList());\n    }\n  }, [tabName]);\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [type, setType] = useState(null);\n  const [activeId, setId] = useState(null);\n  const [link, setLink] = useState('');\n\n  const handleClose = () => setIsOpen(false);\n\n  const handleAdd = () => {\n    router.push('/create-setting');\n  };\n\n  const handleClick = (id) => {\n    if (id === activeId) {\n      setId(null);\n    } else {\n      setId(id);\n    }\n  };\n\n  const handleEdit = () => {\n    console.log('edit');\n  };\n  const handlePreview = () => {\n    console.log('preview');\n  };\n  const handleShare = () => {\n    if (tabName === 'my-form') {\n      const { uuid } = formList[activeId];\n      setLink(`https://cryptic-crag-39318.herokuapp.com/jolly/forms/${uuid}`)\n    }\n    if (tabName === 'filled-form') {\n      const { formUuid } = respList[activeId];\n      setLink(`/jolly/forms/${formUuid}`)\n    }\n\n    setType('share');\n    setIsOpen(true);\n  };\n  const handleReview = () => {\n    const { uuid } = formList[activeId];\n    router.push(`/jolly/response/${uuid}`);\n  };\n  const handleDelete = () => {\n    setType('delete');\n    setIsOpen(true);\n  };\n\n  const onDelete = () => {\n    const { uuid } = list[activeId];\n    deleteForm({ uuid });\n    setIsOpen(false);\n  };\n\n  const handleCopy = () => {\n    const ele = document.getElementById('copy_link');\n    ele.select();\n    ele.setSelectionRange(0, 99999);\n\n    document.execCommand('copy');\n  };\n\n  const options = [\n    {\n      text: 'Edit',\n      onClickEvent: () => handleEdit(),\n    },\n    {\n      text: 'Preview',\n      onClickEvent: () => handlePreview(),\n    },\n    {\n      text: 'Share',\n      onClickEvent: () => handleShare(),\n    },\n    {\n      text: 'Responses',\n      onClickEvent: () => handleReview(),\n    },\n    {\n      text: 'Delete',\n      onClickEvent: () => handleDelete(),\n    },\n  ];\n\n  const list = tabName === 'my-form' ? formList : respList;\n\n  return (\n    <Wrapper>\n      <CreateCard handleAdd={handleAdd} />\n      { tabName === 'my-form' && list && list.length > 0 && list.map((card, idx) => (\n        <Card\n          key={idx}\n          id={idx}\n          activeId={activeId}\n          title={card.name}\n          times={card.updatedAt}\n          response={card.Responses.length}\n          options={options}\n          handleClick={() => handleClick(idx)}\n        />\n      ))}\n      { tabName === 'filled-form'\n        && list\n        && list.length > 0\n        && list.map((card, idx) => (\n          <Card\n            key={idx}\n            id={idx}\n            activeId={activeId}\n            title={card.formName}\n            times={card.formExpiresAt}\n            sponser={card.sponsorName}\n            options={options}\n            handleClick={() => handleClick(idx)}\n          />\n        ))}\n      <Popup\n        isOpen={isOpen}\n        onClose={() => handleClose()}\n      >\n        {type === 'delete' && <Delete formName={list[activeId].name} onDelete={onDelete} handleClose={handleClose} />}\n        {type === 'share' && <ShareLink value={link} handleCopy={handleCopy} />}\n      </Popup>\n    </Wrapper>\n  );\n};\n\nexport default cardList;\n"]},"metadata":{},"sourceType":"module"}