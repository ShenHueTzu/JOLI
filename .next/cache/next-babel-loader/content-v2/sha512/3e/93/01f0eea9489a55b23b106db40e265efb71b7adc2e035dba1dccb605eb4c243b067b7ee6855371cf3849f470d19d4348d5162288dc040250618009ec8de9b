{"ast":null,"code":"import _defineProperty from \"/Users/shen/JOLI/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/shen/JOLI/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shen/JOLI/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _extraReducers;\n\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { getFormList, getFormById, getFormResponse } from '../../apis/forms';\nexport var fetchFormList = createAsyncThunk('/form/list', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var response;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          response = getFormList();\n          return _context.abrupt(\"return\", response);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n})));\nexport var fetchSingleFormData = createAsyncThunk('/form/single', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n    var uuid, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            uuid = _ref2.uuid;\n            response = getFormById({\n              uuid: uuid\n            });\n            return _context2.abrupt(\"return\", response);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nexport var fethchFormResponse = createAsyncThunk('/form/response', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref4) {\n    var uuid, response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            uuid = _ref4.uuid;\n            response = getFormResponse({\n              uuid: uuid\n            });\n            return _context3.abrupt(\"return\", response);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x2) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nexport var formListSlice = createSlice({\n  name: 'form',\n  initialState: {\n    list: {},\n    formParams: {\n      name: '',\n      description: ''\n    },\n    uuid: '',\n    singleform: {},\n    responses: []\n  },\n  reducers: {\n    saveForm: function saveForm(state, action) {\n      var _action$payload = action.payload,\n          name = _action$payload.name,\n          description = _action$payload.description;\n      state.formParams = {\n        name: name,\n        description: description\n      };\n    },\n    saveuuid: function saveuuid(state, action) {\n      var uuid = action.payload.uuid;\n      state.uuid = uuid;\n    }\n  },\n  extraReducers: (_extraReducers = {}, _defineProperty(_extraReducers, fetchFormList.fulfilled, function (state, action) {\n    state.list = action.payload;\n  }), _defineProperty(_extraReducers, fetchSingleFormData.fulfilled, function (state, action) {\n    state.singleform = action.payload;\n  }), _defineProperty(_extraReducers, fethchFormResponse.fulfilled, function (state, action) {\n    state.responses = action.payload;\n  }), _extraReducers)\n});\nvar _formListSlice$action = formListSlice.actions,\n    saveForm = _formListSlice$action.saveForm,\n    saveuuid = _formListSlice$action.saveuuid;\nexport { saveForm, saveuuid };\nexport default formListSlice.reducer;","map":{"version":3,"sources":["/Users/shen/JOLI/redux/slices/formsSlice.js"],"names":["createAsyncThunk","createSlice","getFormList","getFormById","getFormResponse","fetchFormList","response","fetchSingleFormData","uuid","fethchFormResponse","formListSlice","name","initialState","list","formParams","description","singleform","responses","reducers","saveForm","state","action","payload","saveuuid","extraReducers","fulfilled","actions","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nimport { getFormList, getFormById, getFormResponse } from '../../apis/forms';\n\nexport const fetchFormList = createAsyncThunk('/form/list', async () => {\n  const response = getFormList();\n  return response;\n});\n\nexport const fetchSingleFormData = createAsyncThunk('/form/single', async ({ uuid }) => {\n  const response = getFormById({ uuid });\n  return response;\n});\n\nexport const fethchFormResponse = createAsyncThunk('/form/response', async ({ uuid }) => {\n  const response = getFormResponse({ uuid });\n  return response;\n});\n\nexport const formListSlice = createSlice({\n  name: 'form',\n  initialState: {\n    list: {},\n    formParams: {\n      name: '',\n      description: '',\n    },\n    uuid: '',\n    singleform: {},\n    responses:[]\n  },\n  reducers: {\n    saveForm(state, action) {\n      const { name, description } = action.payload;\n      state.formParams = {\n        name,\n        description,\n      };\n    },\n    saveuuid(state, action) {\n      const { uuid } = action.payload;\n      state.uuid = uuid;\n    },\n  },\n  extraReducers: {\n    [fetchFormList.fulfilled]: (state, action) => {\n      state.list = action.payload;\n    },\n    [fetchSingleFormData.fulfilled]: (state, action) => {\n      state.singleform = action.payload;\n    },\n    [fethchFormResponse.fulfilled]: (state, action) => {\n      state.responses = action.payload;\n    }\n  }\n});\n\nexport const { saveForm, saveuuid } = formListSlice.actions;\n\nexport default formListSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}